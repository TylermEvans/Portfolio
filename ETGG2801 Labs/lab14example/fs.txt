#version 150

uniform sampler2D tex;

struct Light {
    vec3 position;
    vec3 color;
};

uniform Light light;

in vec2 v_texcoord;
in vec3 v_normal;
in vec3 v_worldPos;

out vec4 color;

void main(){
    
    vec3 N = normalize(v_normal);
    vec3 total_dp = vec3(0.0);
    vec3 L = normalize(light.position - v_worldPos);
    float dp = dot(N,L);
    dp = max( dp , 0.0 );
    color = texture(tex,v_texcoord);
    color.rgb *= dp * light.color;
}