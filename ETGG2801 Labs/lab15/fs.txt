#version 150

uniform sampler2D tex;
uniform vec3 eyePos;
uniform float fshader;


struct Light {
    vec3 position;
    vec3 color;
};

uniform Light light;

in vec2 v_texcoord;
in vec3 v_normal;
in vec3 v_worldPos;



out vec4 color;

void main(){
    if (fshader==1.0){

    	vec3 N = normalize(v_normal);
    	vec3 L = normalize(light.position - v_worldPos);
    	float dp = dot(N,L);
    	dp = max( dp , 0.0 );
    	vec3 R = reflect(-L,N);
    	R = normalize(R);
    	vec3 V = normalize(eyePos-v_worldPos);
    	float sp = dot(R,V);
    	sp = max(sp, 0.0);
    	sp = pow(sp,32);
		color.rgb = (dp+sp)*texture(tex, v_texcoord).rgb*light.color;
	}
	

    

	if (fshader==2)
	{
		
		color = texture(tex, v_texcoord);
		
	
	}
}